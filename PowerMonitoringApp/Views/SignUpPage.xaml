<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="PowerMonitoringApp.Views.SignUpPage"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:viewModels="clr-namespace:PowerMonitoringApp.ViewModels"
             xmlns:converters="clr-namespace:PowerMonitoringApp.Converters"
             x:DataType="viewModels:SignUpViewModel">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:EmailFormatValidator x:Key="EmailFormatValidator"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ScrollView>
        <VerticalStackLayout Padding="30,70,30,30" Spacing="10">
            <!-- Logo -->
            <Image Margin="0,0,0,20" Source="appiconlogo.png" HeightRequest="130" HorizontalOptions="Center" />

            <!-- Welcome Text -->
            <Label Margin="0,0,0,20" Text="Create an Account" FontSize="24" HorizontalOptions="Center" />
            <Label Margin="0,0,0,20" Text="Sign up to get started" FontSize="14" HorizontalOptions="Center" />

            <!-- Email Entry -->
            <Entry x:Name="EmailEntry" Placeholder="Email address" Text="{Binding Email}">
                <Entry.Behaviors>
                    <toolkit:TextValidationBehavior
                            IsValid="{Binding IsEmailValid}"
                            Flags="ValidateOnValueChanged"
                            x:Name="EmailValidator"
                            MinimumLength="5">
                    </toolkit:TextValidationBehavior>
                </Entry.Behaviors>
            </Entry>
            <Label Margin="0,0,0,10" Text="Please enter a valid email format."
                   TextColor="Red"
                   FontSize="Small">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference EmailEntry}, Path=Text, Converter={StaticResource EmailFormatValidator}}"
                                 Value="False">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference EmailEntry}, Path=Text, Converter={StaticResource EmailFormatValidator}}"
                                 Value="True">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>

            <!-- FirstName Entry -->
            <Entry Placeholder="First Name" 
                   Text="{Binding FirstName}"
                   x:Name="FirstNameEntry">
                <Entry.Behaviors>
                    <toolkit:TextValidationBehavior
                        IsValid="{Binding IsFirstNameValid}"
                        x:Name="FirstNameValidator"
                        Flags="ValidateOnAttaching, ValidateOnValueChanged"
                        MinimumLength="1" />
                </Entry.Behaviors>
            </Entry>
            <Label Text="First Name is required"
                   TextColor="Red"
                   FontSize="Small">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference FirstNameValidator}, Path=IsValid}"
                                 Value="False">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference FirstNameValidator}, Path=IsValid}"
                                 Value="True">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>

            <!-- LastName Entry -->
            <Entry Placeholder="Last Name" 
                   Text="{Binding LastName}"
                   x:Name="LastNameEntry">
                <Entry.Behaviors>
                    <toolkit:TextValidationBehavior
                        IsValid="{Binding IsLastNameValid}"
                        x:Name="LastNameValidator"
                        Flags="ValidateOnAttaching, ValidateOnValueChanged"
                        MinimumLength="1" />
                </Entry.Behaviors>
            </Entry>
            <Label Text="Last Name is required"
                   TextColor="Red"
                   FontSize="Small">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference LastNameValidator}, Path=IsValid}"
                                 Value="False">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference LastNameValidator}, Path=IsValid}"
                                 Value="True">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>

            <!-- MiddleName Entry (Optional) -->
            <Entry Placeholder="Middle Name (optional)" 
                   Text="{Binding MiddleName}"
                   x:Name="MiddleNameEntry">
            </Entry>

            <!-- Address Entry -->
            <Entry Placeholder="Address" 
                   Text="{Binding Address}"
                   x:Name="AddressEntry">
                <Entry.Behaviors>
                    <toolkit:TextValidationBehavior
                        IsValid="{Binding IsAddressValid}"
                        x:Name="AddressValidator"
                        Flags="ValidateOnAttaching, ValidateOnValueChanged"
                        MinimumLength="5" />
                </Entry.Behaviors>
            </Entry>
            <Label Text="Address is required"
                   TextColor="Red"
                   FontSize="Small">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference AddressValidator}, Path=IsValid}"
                                 Value="False">
                        <Setter Property="IsVisible" Value="True" />
                    </DataTrigger>
                    <DataTrigger TargetType="Label"
                                 Binding="{Binding Source={x:Reference AddressValidator}, Path=IsValid}"
                                 Value="True">
                        <Setter Property="IsVisible" Value="False" />
                    </DataTrigger>
                </Label.Triggers>
            </Label>

            <!-- Password Entry -->
            <Entry Placeholder="Password" IsPassword="True" Text="{Binding Password}"/>

            <!-- Confirm Password Entry -->
            <Entry Placeholder="Confirm Password" IsPassword="True" Text="{Binding ConfirmPassword}"/>

            <!-- Error Message -->
            <Label Margin="0,0,0,20" 
                   Text="{Binding OtherErrorMessage}" 
                   IsVisible="{Binding IsNotValidSignUp}" 
                   TextColor="Red" />

            <BoxView Margin="0,0,0,20"/>

            <!-- Sign Up Button -->
            <Button Margin="0,0,0,20" Text="Sign Up" TextColor="White" Command="{Binding TryToSignUpPageCommand}"/>
            <ActivityIndicator
                    VerticalOptions="Center"
                    IsRunning="{Binding IsBusy}"
                    IsVisible="{Binding IsBusy}"/>

            <!-- Log In Link -->
            <StackLayout Orientation="Horizontal" HorizontalOptions="Center">
                <Label Text="Already have an account?" />
                <Label Text=" Log in" TextColor="{AppThemeBinding Light=Blue, Dark=LightBlue}">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding GoToLoginCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
            </StackLayout>
        </VerticalStackLayout>
    </ScrollView>
</ContentPage>